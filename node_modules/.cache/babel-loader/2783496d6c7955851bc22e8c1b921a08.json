{"ast":null,"code":"var _jsxFileName = \"D:\\\\Edgedownload\\\\dacheng\\\\Cryptoplat-master\\\\src\\\\components\\\\MyTokens\\\\MyTokenInfo.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyTokenInfo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"NFT\\u5E8F\\u53F7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), \" :\", \" \", this.props.NFT.tokenID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"\\u4EE3\\u53F7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), \" :\", \" \", this.props.NFT.tokenName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"\\u4EF7\\u683C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), \" :\", \" \", window.web3.utils.fromWei(this.props.NFT.price, \"Ether\"), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 23\n        }, this)]\n      }, this.props.NFT.tokenID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this), this.props.NFT.onSale ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"\\u6700\\u9AD8\\u51FA\\u4EF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 27\n          }, this), \" :\", \" \", this.props.Auction.highestBid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"\\u7ED3\\u675F\\u65F6\\u95F4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 27\n          }, this), \" :\", \" \", this.props.Auction.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }, this), this.props.currentTime >= this.props.Auction.endTime ? !this.props.Auction.ended ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success mt-4 w-50\",\n          style: {\n            fontSize: \"0.8rem\",\n            letterSpacing: \"0.14rem\"\n          },\n          onClick: () => {\n            this.props.NFTContract.methods.endAuction(this.props.NFT.tokenID).send({\n              from: this.props.accountAddress,\n              gas: '3000000'\n            }).on(\"confirmation\", () => {\n              window.location.reload();\n            });\n          },\n          children: \"End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"botton\", {\n          children: \"\\u5F85\\u9886\\u53D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u62CD\\u5356\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          let minBid = prompt(\"Please input minBid\");\n          let duration = prompt(\"Please input duration\");\n          this.props.NFTContract.methods.beginAuction(this.props.NFT.tokenID, minBid, duration).send({\n            from: this.props.accountAddress,\n            gas: '3000000'\n          }).on(\"confirmation\", () => {\n            window.location.reload();\n          });\n        },\n        children: \"\\u62CD\\u5356\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyTokenInfo;","map":{"version":3,"sources":["D:/Edgedownload/dacheng/Cryptoplat-master/src/components/MyTokens/MyTokenInfo.jsx"],"names":["React","MyTokenInfo","Component","constructor","props","render","NFT","tokenID","tokenName","window","web3","utils","fromWei","price","onSale","Auction","highestBid","endTime","currentTime","ended","fontSize","letterSpacing","NFTContract","methods","endAuction","send","from","accountAddress","gas","on","location","reload","minBid","prompt","duration","beginAuction"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass MyTokenInfo extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-6\">\n                    <div key={this.props.NFT.tokenID} className=\"mt-4\">\n                      <p>\n                        <span className=\"font-weight-bold\">NFT序号</span> :{\" \"}\n                        {this.props.NFT.tokenID}\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">代号</span> :{\" \"}\n                        {this.props.NFT.tokenName}\n                      </p>\n                      <p>\n                        <span className=\"font-weight-bold\">价格</span> :{\" \"}\n                        {window.web3.utils.fromWei(this.props.NFT.price, \"Ether\")} ETH\n                      </p>\n                    </div>\n                    {this.props.NFT.onSale ? (\n                      <div>\n                      <p>\n                          <span className=\"font-weight-bold\">最高出价</span> :{\" \"}\n                          {this.props.Auction.highestBid}\n                      </p>\n                      <p>\n                          <span className=\"font-weight-bold\">结束时间</span> :{\" \"}\n                          {this.props.Auction.endTime}\n                      </p>\n                      {this.props.currentTime >= this.props.Auction.endTime ? (\n                        !this.props.Auction.ended ? (\n                          <button\n                          className=\"btn btn-outline-success mt-4 w-50\"\n                          style={{ fontSize: \"0.8rem\", letterSpacing: \"0.14rem\" }}\n                          onClick={ () => {\n                            this.props.NFTContract.methods.endAuction(this.props.NFT.tokenID).send({ from: this.props.accountAddress, gas: '3000000'}).on(\"confirmation\", () => {\n                              window.location.reload();\n                            });\n                          }}\n                          >\n                            End\n                          </button>\n                        ) : (\n                          <botton>\n                              待领取\n                          </botton>\n                        )\n                        \n                      ) : (\n                      <button>\n                        拍卖中\n                      </button>\n                      )}\n                      </div>\n                    ) : (\n                      <button\n                        onClick={ () => {\n                          let minBid = prompt(\"Please input minBid\");\n                          let duration = prompt(\"Please input duration\");\n                          this.props.NFTContract.methods.beginAuction(this.props.NFT.tokenID, minBid, duration).send({ from: this.props.accountAddress, gas: '3000000'}).on(\"confirmation\", () => {\n                            window.location.reload();\n                          });\n                        }}\n                      >\n                        拍卖\n                      </button>\n                    )}\n                  </div>\n        )\n    }\n}\n\nexport default MyTokenInfo;"]},"metadata":{},"sourceType":"module"}