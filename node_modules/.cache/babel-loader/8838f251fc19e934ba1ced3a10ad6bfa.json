{"ast":null,"code":"var _jsxFileName = \"D:\\\\Edgedownload\\\\dacheng\\\\Cryptoplat-master\\\\src\\\\components\\\\Queries\\\\Queries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Queries = props => {\n  _s();\n\n  const [tokenIdForOwner, setTokenIdForOwner] = useState(\"\");\n  const [tokenOwner, setTokenOwner] = useState(\"\");\n  const [tokenIdForOwnerNotFound, setTokenIdForOwnerNotFound] = useState(false);\n  const [tokenIdForMetadata, setTokenIdForMetadata] = useState(\"\");\n  const [tokenMetadata, setTokenMetadata] = useState(\"\");\n  const [tokenMetadataLink, setTokenMetadataLink] = useState(\"\");\n  const [tokenIdForMetadataNotFound, setTokenIdForMetadataNotFound] = useState(false);\n\n  const getTokenOwner = async e => {\n    e.preventDefault();\n\n    try {\n      const owner = await props.NFTContract.methods.getTokenOwner(tokenIdForOwner).call();\n      setTokenOwner(owner);\n      setTimeout(() => {\n        setTokenOwner(\"\");\n        setTokenIdForOwner(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForOwnerNotFound(true);\n      setTokenIdForOwner(\"\");\n    }\n  };\n\n  const getTokenMetadata = async e => {\n    e.preventDefault();\n\n    try {\n      const metadata = await props.NFTContract.methods.getTokenMetaData(tokenIdForMetadata).call();\n      setTokenMetadata(metadata.substr(0, 60) + \"...\" + metadata.slice(metadata.length - 5));\n      setTokenMetadataLink(metadata);\n      setTimeout(() => {\n        setTokenMetadata(\"\");\n        setTokenIdForMetadata(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForMetadataNotFound(true);\n      setTokenIdForMetadata(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-5\",\n          children: \"Query an NFT by tokenID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 mt-1 border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\u67E5\\u8BE2NFT\\u6240\\u5C5E\\u6743\\u6D41\\u8F6C\\u4FE1\\u606F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: getTokenOwner,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                className: \"form-control\",\n                value: tokenIdForOwner,\n                placeholder: \"Enter tokenID\",\n                onChange: e => setTokenIdForOwner(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"\\u67E5\\u8BE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), tokenIdForOwnerNotFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger alert-dissmissible mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"alert\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Non-Existent tokenID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4\",\n            children: tokenOwner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Queries, \"pKYz3nFust5Ml48MK4j5bXS9NMg=\");\n\n_c = Queries;\nexport default Queries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Queries\");","map":{"version":3,"sources":["D:/Edgedownload/dacheng/Cryptoplat-master/src/components/Queries/Queries.jsx"],"names":["React","useState","Queries","props","tokenIdForOwner","setTokenIdForOwner","tokenOwner","setTokenOwner","tokenIdForOwnerNotFound","setTokenIdForOwnerNotFound","tokenIdForMetadata","setTokenIdForMetadata","tokenMetadata","setTokenMetadata","tokenMetadataLink","setTokenMetadataLink","tokenIdForMetadataNotFound","setTokenIdForMetadataNotFound","getTokenOwner","e","preventDefault","owner","NFTContract","methods","call","setTimeout","getTokenMetadata","metadata","getTokenMetaData","substr","slice","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Queries = (props) => {\n  const [tokenIdForOwner, setTokenIdForOwner] = useState(\"\");\n  const [tokenOwner, setTokenOwner] = useState(\"\");\n  const [tokenIdForOwnerNotFound, setTokenIdForOwnerNotFound] = useState(false);\n\n  const [tokenIdForMetadata, setTokenIdForMetadata] = useState(\"\");\n  const [tokenMetadata, setTokenMetadata] = useState(\"\");\n  const [tokenMetadataLink, setTokenMetadataLink] = useState(\"\");\n  const [tokenIdForMetadataNotFound, setTokenIdForMetadataNotFound] = useState(false);\n\n  const getTokenOwner = async (e) => {\n    e.preventDefault();\n    try {\n      const owner = await props.NFTContract.methods.getTokenOwner(tokenIdForOwner).call();\n      setTokenOwner(owner);\n      setTimeout(() => {\n        setTokenOwner(\"\");\n        setTokenIdForOwner(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForOwnerNotFound(true);\n      setTokenIdForOwner(\"\");\n    }\n  };\n\n  const getTokenMetadata = async (e) => {\n    e.preventDefault();\n    try {\n      const metadata = await props.NFTContract.methods.getTokenMetaData(tokenIdForMetadata).call();\n      setTokenMetadata(metadata.substr(0, 60) + \"...\" + metadata.slice(metadata.length - 5));\n      setTokenMetadataLink(metadata);\n      setTimeout(() => {\n        setTokenMetadata(\"\");\n        setTokenIdForMetadata(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForMetadataNotFound(true);\n      setTokenIdForMetadata(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"jumbotron\">\n            <h1 className=\"display-5\">Query an NFT by tokenID</h1>\n        </div>\n      </div>\n      <div className=\"p-4 mt-1 border\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h5>查询NFT所属权流转信息</h5>\n            <form onSubmit={getTokenOwner}>\n              <div className=\"form-group\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={tokenIdForOwner}\n                  placeholder=\"Enter tokenID\"\n                  onChange={(e) => setTokenIdForOwner(e.target.value)}\n                />\n              </div>\n              <button type=\"submit\">\n                查询\n              </button>\n              {tokenIdForOwnerNotFound ? (\n                <div className=\"alert alert-danger alert-dissmissible mt-4\">\n                  <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                    <span>&times;</span>\n                  </button>\n                  <strong>Non-Existent tokenID</strong>\n                </div>\n              ) : null}\n            </form>\n            <p className=\"mt-4\">{tokenOwner}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Queries;\n"]},"metadata":{},"sourceType":"module"}